#! /bin/sh
#
# panel for bspwm with clickable workspaces
# shows if a workspace is occupied or marked urgent, etc.
# special thanks to earsplit

font_family='Terminus'
font_size=12

. /home/vosh/.config/bspwm/panel/panel_colors # point this to your config file

adaptive_centering=1
screen_width=$(sres -W)
NORMIFS=$IFS
FIELDIFS=':'
PADDING=' '

bspc config top_padding                 15

#while getopts 'af:s:' opt ; do
#case "$opt" in
#        a)
#            adaptive_centering=1
#            ;;
#        f)
#            font_family=$OPTARG
#            ;;
#        s)
#            font_size=$OPTARG
#            ;;
#    esac
#done

shift $((OPTIND - 1))

while read -r line ; do
    case $line in
  #      S*)
   #         # clock output
    #        sys_infos="^fg($COLOR_STATUS_FG)^bg($COLOR_STATUS_BG)${PADDING}${line#?}${PADDING}^fg()^bg()${PADDING}"
     #       ;;
      #  T*)
       #     # xtitle output
        #    title="^fg($COLOR_TITLE_FG)^bg($COLOR_TITLE_BG)${PADDING}${line#?}${PADDING}^fg()^bg()"
         #   ;;
        W*)
            # bspwm internal state
            wm_infos="$PADDING"
            IFS=$FIELDIFS
            set -- ${line#?}
            while [ $# -gt 0 ] ; do
                item=$1
                case $item in
                    [OoFfUu]*)
                        # desktops
                        name=${item#?}
                        case $item in
                            O*)
                                # focused occupied desktop
                                FG=$COLOR_FOCUSED_OCCUPIED_FG
                                BG=$COLOR_FOCUSED_OCCUPIED_BG
                                INFO=' ^p(-2;-1)^ro(4x4)^p()'
                                ;;
                            F*)
                                # focused free desktop
                                FG=$COLOR_FOCUSED_FREE_FG
                                BG=$COLOR_FOCUSED_FREE_BG
                                INFO=' '
                                ;;
                            U*)
                                # focused urgent desktop
                                FG=$COLOR_FOCUSED_URGENT_FG
                                BG=$COLOR_FOCUSED_URGENT_BG
                                INFO=' !'
                                ;;
                            o*)
                                # occupied desktop
                                FG=$COLOR_OCUPPIED_FG
                                BG=$COLOR_OCUPPIED_BG
                                INFO=' ^p(-2;-1)^ro(4x4)^p()'
                                ;;
                            f*)
                                # free desktop
                                FG=$COLOR_FREE_FG
                                BG=$COLOR_FREE_BG
                                INFO=' '
                                ;;
                            u*)
                                # urgent desktop
                                FG=$COLOR_URGENT_FG
                                BG=$COLOR_URGENT_BG
                                INFO=' !'
                                ;;
                        esac
                        wm_infos="${wm_infos}^fg(${FG})^bg(${BG})^ca(1, bspc desktop -f ${name})^ca(3, bspc window -d ${name})^ca(2, bspc window -d ${name} -f)^ca(4, bspc window -f next)^ca(5, bspc window -f prev)${INFO}${name}${PADDING}^ca()^ca()^ca()^ca()^ca()"
                        ;;
                    L*)
                        # layout
                        layout=$(printf "%s" "${item#?}" | sed 's/^\(.\).*/\U\1/')
                        wm_infos="${wm_infos}^fg()^bg() ${PADDING}^fg(#618485)^i(/home/vosh/.icons/stlarch/tile.xbm) ^ca(1, bspc desktop -l next)^fg($COLOR_LAYOUT_FG)^bg($COLOR_LAYOUT_BG)${PADDING}$layout${PADDING}^ca()"
                        ;;
                esac
                shift
            done
            IFS=$NORMIFS
            ;;
    esac
    set -- $(printf '%s\0%s\0%s' "$wm_infos" | sed 's/\^[a-z]\+([^)]*)//g' | xargs -0 txtw -f "$font_family" -s "$font_size")
    left_width=$1
    center_width=$2
    right_width=$3
    left_indent=0
    right_indent=$((screen_width - right_width))
    available_center=$((screen_width - (left_width + right_width)))
    if [ $available_center -lt $center_width ] ; then
        center_indent=$((left_indent + left_width))
    else
        if [ $adaptive_centering -eq 1 ] ; then
            center_indent=$((left_width + (available_center - center_width) / 2))
        else
            center_indent=$(( (screen_width - center_width) / 2 ))
        fi
    fi
    printf "%s\n" "^pa($center_indent)$title^pa($left_indent)$wm_infos"
done
